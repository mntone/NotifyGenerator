using System;
using System.ComponentModel;
using System.Diagnostics;

namespace Test
{
    public enum NotifyNameConversionMethod { LeadingUnderscoreAndLowerCaseLetters, LeadingUnderscore, LeadingLowerCaseLetters, Hungarian, HungarianLikeCPlusPlus, }
    public enum NotifyCompareMethod { None, Equals, ReferenceEquals, EqualityComparerEquals, }

    [Conditional("NEVER_USED_AT_RUNTIME")]
    [AttributeUsage(AttributeTargets.Class | AttributeTargets.Property, AllowMultiple = false, Inherited = false)]
    public sealed class NotifyGenerateAttribute : Attribute
    {
        public NotifyGenerateAttribute()
        { }

        public bool UseThis { get; set; } = true;
        public bool UsePrivateAccessModifierClearly { get; set; } = true;
        public bool IsThreadSafe { get; set; } = true;
        public bool IsFieldHidden { get; set; } = true;
        public NotifyCompareMethod CompareMethod { get; set; } = NotifyCompareMethod.EqualityComparerEquals;
        public NotifyNameConversionMethod NameConversionMethod { get; set; } = NotifyNameConversionMethod.LeadingUnderscoreAndLowerCaseLetters;
    }

    [Conditional("NEVER_USED_AT_RUNTIME")]
    [AttributeUsage(AttributeTargets.Property, AllowMultiple = false, Inherited = false)]
    public sealed class NotifyUngenerateAttribute : Attribute
    { }

